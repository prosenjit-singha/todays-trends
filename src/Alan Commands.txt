intent("What does this webpage do?", "What can I do here?", 
       reply("This webpage will provide you the latest news and also the old ones."));

const API_KEY = 'daeddbe4bc074bf48d19a82ff073c046';

let savedArticles = [];

// News by Source
intent(`(Give me|Tell me|Show me) the news from $(source* (.*))`, (p) => {
    let NEWS_API_URL = `https://newsapi.org/v2/top-headlines?apiKey=${API_KEY}`;
    
    if(p.source.value) {
        NEWS_API_URL = `${NEWS_API_URL}&sources=${p.source.value.toLowerCase().split(" ").join('-')}`
    }
    
    api.request(NEWS_API_URL, (error, response, body) => {
        const { articles } = JSON.parse(body);
        
        if(!articles.length) {
            p.play('Sorry, (please try searching for news from another source|There is no news from this source)');
            return;
        }
        
        savedArticles = articles;
        
        p.play({ command: 'newHeadlines', articles });
        p.play(`Here are the (latest|recent|up-to-date) news from ${p.source.value}.`);
        
        p.play('(Would you like me to read the headlines?|Do you want me to read the headlines for you?)');
        p.then(confirm);
    });
})

//News by Terms
intent('(What\'s up with|I wanna know about) $(term* (.*))', (p) => {
    let NEWS_API_URL = `https://newsapi.org/v2/everything?apiKey=${API_KEY}`;
    
    if(p.term.value) {
        NEWS_API_URL = `${NEWS_API_URL}&q=${p.term.value}`
    }
    
    api.request(NEWS_API_URL, (error, response, body) => {
        const { articles } = JSON.parse(body);
        
        if(!articles.length) {
            p.play('Sorry, please try searching for (something else|another term|another topic)');
            return;
        }
        
        savedArticles = articles;
        
        p.play({ command: 'newHeadlines', articles });
        p.play(`Here are the (latest|recent|up-to-date) (articles|news) on ${p.term.value}.`);
        
        p.play('(Would you like me to read the headlines?|Do you want me to read the headlines for you?)');
        p.then(confirm);
        
    });
})

// News by Categories
const CATEGORIES = ['business', 'entertainment', 'general', 'health', 'science', 'sports', 'technology'];
const CATEGORIES_INTENT = `${CATEGORIES.map((category) => `${category}~${category}`).join('|')}|`;

intent(`(show me|show|what is|tell me|what's|what are|what're|read) (the|) (recent|latest|) $(N articles|news|headlines) (in|about|on|) $(ctgr~ ${CATEGORIES_INTENT})`,
  `(read|show me|show|get|bring me|give me) (the|) (recent|latest|) $(ctgr~ ${CATEGORIES_INTENT}) $(N articles|news|headlines)`, (p) => {
    let NEWS_API_URL = `https://newsapi.org/v2/top-headlines?apiKey=${API_KEY}&country=us`;
    
    if(p.ctgr.value) {
        NEWS_API_URL = `${NEWS_API_URL}&category=${p.ctgr.value}`
    }
    
    api.request(NEWS_API_URL, (error, response, body) => {
        const { articles } = JSON.parse(body);
        
        if(!articles.length) {
            p.play('Sorry, please try searching for (a different category|another category)');
            return;
        }
        
        savedArticles = articles;
        
        p.play({ command: 'newHeadlines', articles });
        
        if(p.ctgr.value) {
            p.play(`Here are the (latest|recent) articles on ${p.C.value}.`);        
        } else {
            p.play(`Here are the (latest|recent) news`);   
        }
        
        p.play('(Would you like me to read the headlines?|Do you want me to read the headlines for you?)');
        p.then(confirm);
        
    });
})

const confirm = context(() => {
    intent('(yes|of course|sure|why not?|go on)', async (p) => {
        for(let i = 0; i < savedArticles.length; i++){
            p.play({ command: 'highlight', article: savedArticles[i]});
            p.play(`${savedArticles[i].title}`);
        }
        p.play('That\'s all for now.')
    })
    
    intent('(no|never mind)', (p) => {
        p.play('(Sure|Well), (sounds good to me|as your wish).')
    })
})

intent('open (the|) (article|) (number|) $(number* (.*))', (p) => {
    if(p.number.value) {
        p.play({ command:'open', number: p.number.value, articles: savedArticles})
    }
})

intent('(go back|back|can you go back?)', (p) => {
    p.play('(Sure, going back|Of course, going back now|Going back.)');
    p.play({ command: 'newHeadlines', articles: []})
})